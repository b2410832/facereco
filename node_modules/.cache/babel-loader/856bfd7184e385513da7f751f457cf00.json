{"ast":null,"code":"var _jsxFileName = \"/Users/rosechen/facereco/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nconst app = new Clarifai.App({\n  apiKey: '8f4b63cef0a747c38b676ca789a89a68'\n});\nconst particlesOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 50\n    },\n    \"size\": {\n      \"value\": 3\n    }\n  },\n  \"interactivity\": {\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        topRow: clarifaiFace.top_row * height,\n        leftCol: clarifaiFace.left_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n        rightCol: width - clarifaiFace.right_col * width\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //input有變時，把input state更新為輸入值\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //按下按鈕後，將<FaceRecognition />照片更新為input內容\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))) //並計算input照片的臉部位置&丟入displayFaceBox\n      .catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      //what users input\n      imageUrl: '',\n      //display image\n      box: {} //face detect box\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange //pass as props\n      ,\n      onButtonSubmit: this.onButtonSubmit //pass as props\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      box: this.state.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rosechen/facereco/src/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","particlesOptions","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","topRow","top_row","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\n\n\nconst app = new Clarifai.App({\n apiKey: '8f4b63cef0a747c38b676ca789a89a68'\n});\n\nconst particlesOptions = {\n      \"particles\": {\n          \"number\": {\n              \"value\": 50\n          },\n          \"size\": {\n              \"value\": 3\n          }\n      },\n      \"interactivity\": {\n          \"events\": {\n              \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n              }\n          }\n      }\n  }\n\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      input: '', //what users input\n      imageUrl: '', //display image\n      box: {} //face detect box\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      topRow: clarifaiFace.top_row * height,\n      leftCol: clarifaiFace.left_col * width,\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n      rightCol: width - (clarifaiFace.right_col * width),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value }); //input有變時，把input state更新為輸入值\n  }\n\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input }); //按下按鈕後，將<FaceRecognition />照片更新為input內容\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))//並計算input照片的臉部位置&丟入displayFaceBox\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Particles className='particles' \n          params={particlesOptions} /> \n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} //pass as props\n          onButtonSubmit={this.onButtonSubmit} //pass as props\n        />\n        <FaceRecognition \n          imageUrl={this.state.imageUrl}\n          box={this.state.box}\n        />\n\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}